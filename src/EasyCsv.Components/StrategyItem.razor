@implements IDisposable
@if (!string.IsNullOrWhiteSpace(DisplayName) && Options != null)
{
    <MudListItem Text="@DisplayName">   
        <NestedList>
            @Options
            <MudButton Variant="Variant.Filled" Color="Color.Info" OnClick="x => StrategyPicked.InvokeAsync(StrategyBucket!.ColumnName)" >Run Operation</MudButton>
        </NestedList>
    </MudListItem>
}

@code {
    [CascadingParameter] private StrategyBucket? StrategyBucket { get; set; }
    [Parameter] public string? DisplayName { get; set; }
    [Parameter] public string? Description { get; set; }
    [Parameter] public IReadOnlyDictionary<string, string>? BeforeColumns { get; set; }
    [Parameter] public IReadOnlyDictionary<string, string>? AfterColumns { get; set; }
    [Parameter] public EventCallback<string> StrategyPicked { get; set; }
    [Parameter] public RenderFragment? Options { get; set; }

    protected override void OnInitialized()
    {
        StrategyBucket?.Add(this);
    }


    public void Dispose()
    {
        StrategyBucket?.Remove(this);
    }
}
