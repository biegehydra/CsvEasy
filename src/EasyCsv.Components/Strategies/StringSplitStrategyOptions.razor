@using EasyCsv.Processing
<StrategyItem DisplayName="Split" Description="Splits column on value" StrategyPicked="SplitPicked">
    <Options>
        <MudListItem>
            <MudTextField Placeholder="Delimiter" Variant="Variant.Outlined" @bind-Value="_delimiter"></MudTextField>
        </MudListItem>
        <MudListItem>
            <MudTextField Placeholder="New Column Names" Variant="Variant.Outlined" @bind-Value="_newColumnNames"></MudTextField>
        </MudListItem>
        <MudListItem>
            <MudCheckBox Label="Remove Split Column" @bind-Value="_removeSplitColumn"></MudCheckBox>
        </MudListItem>
    </Options>
</StrategyItem>

@code
{
    [Parameter] public CsvProcessingStepper CsvProcessor { get; set; }
    [Inject] private ISnackbar Snackbar { get; set; }

    private string _newColumnNames { get; set; }
    private bool _removeSplitColumn { get; set; }
    private string _delimiter;
    private async Task SplitPicked(string columnName)
    {
        var splitParsingStrategy = new StringSplitColumnStrategy(columnName, _newColumnNames.Split(','), _delimiter, _removeSplitColumn);
        var result = await CsvProcessor.PerformCsvStrategy(splitParsingStrategy);
        if (result.Success != true)
        {
            Snackbar?.Add(result.Message);
        }
    }
}
