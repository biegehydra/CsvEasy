@namespace EasyCsv.Components

<ErrorBoundary >
    <ChildContent>
        @if (Runner?.CurrentCsv != null && ProcessingOptions != null)
        {
            <MudText Typo="Typo.h5">Current Step: @(Runner.CurrentIndex + 1)</MudText>
            <br />
            <div style="display: flex; flex-direction: row; justify-content: space-between; align-items: baseline;">
                <div style="display: flex; gap: 20px; flex-direction: row;">
                    @if (Runner.IsCacheIndexValid(Runner.CurrentIndex - 1))
                    {
                        <MudButton OnClick="_ => GoBackStep()" Variant="Variant.Filled" Color="Color.Secondary">Go Back Step</MudButton>
                    }
                    @if (Runner.IsCacheIndexValid(Runner.CurrentIndex + 1))
                    {
                        <MudButton OnClick="_ => GoForwardStep()" Variant="Variant.Filled" Color="Color.Secondary">Go Forward Step</MudButton>
                    }
                </div>
                @if (ShowAddReferenceCsvs)
                {
                    var columnsNames = Runner.CurrentCsv.ColumnNames();
                    <div style="display: flex; flex-direction: row; justify-content: space-between; gap: 20px; align-items: baseline;">
                        @if (columnsNames != null && (columnsNames.Contains(InternalColumnNames.References) || columnsNames.Contains(InternalColumnNames.Tags)))
                        {
                            string text = TagsAndReferencesLocation == ColumnLocation.Beginning ? "Move tags and references columns to end" : "Move tags and references columns to beginning";
                            <MudTooltip Text="@text" Delay="600">
                                <MudIconButton Variant="Variant.Filled" Color="Color.Tertiary" Icon="@Icons.Material.Filled.SwapHoriz"
                                               OnClick="() => TagsAndReferencesLocation = TagsAndReferencesLocation == ColumnLocation.End ? ColumnLocation.Beginning : ColumnLocation.End" />
                            </MudTooltip>
                        }
                        <CsvFileInput InputVariant="@FileInputVariant.Button" ButtonText="Add Reference Csv" OnCsvUpload="x => AddReferenceCsv(x)"></CsvFileInput>
                    </div>
                }
            </div>
            <br />
            <br />
            <CsvProcessingTable ProcessingOptions="ProcessingOptions" Stepper="this" EasyCsv="Runner.CurrentCsv" />
        }
    </ChildContent>
    <ErrorContent>
        @if (ErrorBoundaryContent == null)
        {
            <MudText Typo="Typo.h3" >Something went wrong</MudText>
        }
        else
        {
            @ErrorBoundaryContent
        }
    </ErrorContent>
</ErrorBoundary>