@code {
    public static RenderFragment? ExampleCsv(IReadOnlyList<IReadOnlyDictionary<string, string?>>? exampleCsv, string? text, bool brBefore = true)
    {
        if (exampleCsv?.Count > 0 != true) return null;
        int tagsColumnIndex = exampleCsv[0].Keys.IndexOf(InternalColumnNames.Tags);
        var tagColors = new Dictionary<string, Color>();

        void AddTag(string tag)
        {
            if (!tagColors.ContainsKey(tag))
            {
                int colorIndex = tagColors.Count % CsvProcessingTable.DefaultColors.Length;
                Color color = CsvProcessingTable.DefaultColors[colorIndex];
                tagColors.Add(tag, color);
            }
        }

        return @<text>
                    @if (!string.IsNullOrWhiteSpace(text))
                    {
                        @if (brBefore)
                        {
                            <br/>
                        }
                        <MudText Class="mb-3" Typo="Typo.h5">@text</MudText>
                    }
                    <MudTable Items="exampleCsv" Hover Striped Bordered Elevation="0">
                        <HeaderContent>
                            @foreach (var key in exampleCsv[0].Keys.Where(x => x != InternalColumnNames.Tags))
                            {
                                <MudTh>@key</MudTh>
                            }
                            @if (tagsColumnIndex >= 0)
                            {
                                <MudTh>Tags</MudTh>
                            }
                        </HeaderContent>
                        <RowTemplate Context="row">
                            @{
                                int i = -1;
                            }
                            @foreach (var (_, value) in row)
                            {
                                i++;
                                if (i != tagsColumnIndex)
                                {
                                    <MudTd>@value</MudTd>
                                }
                            }
                            @if (tagsColumnIndex >= 0)
                            {
                                var tags = row.Skip(tagsColumnIndex).First().Value?.ToString()?.Split(",", StringSplitOptions.TrimEntries | StringSplitOptions.RemoveEmptyEntries);
                                <MudTd Class="extra-dense">
                                    @if (tags?.Any() == true)
                                    {
                                        <MudChip T="string" Set>
                                            @foreach (var tag in tags)
                                            {
                                                AddTag(tag);
                                                <MudChip T="string"  Text="@tag" Color="tagColors[tag]" Size="Size.Small"/>
                                            }
                                        </MudChip T="string" Set>
                                    }
                                </MudTd>
                            }
                        </RowTemplate>
                    </MudTable>
                </text>;
    }
}
